import datetime
import os
import aiohttp
import asyncio

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—á—ë—Ç—á–∏–∫–∏
stats = {
    "checked": 0,
    "vulnerable": 0,
    "attacked": 0
}

# Telegram —Ç–æ–∫–µ–Ω –∏ —á–∞—Ç ID
TG_TOKEN = os.getenv("TG_TOKEN")
TG_CHAT_ID = os.getenv("TG_CHAT_ID")

def log_info(message: str):
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"[{now}] [INFO] {message}")

    message_lower = message.lower()

    if "–∞–Ω–∞–ª–∏–∑ tx" in message_lower:
        stats["checked"] += 1
    elif "–Ω–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏" in message_lower:
        stats["vulnerable"] += 1
    elif "–∞—Ç–∞–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" in message_lower or "üì§ tx –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" in message_lower:
        stats["attacked"] += 1

async def send_telegram_message(text: str):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram-—Å–æ–æ–±—â–µ–Ω–∏–π
    """
    if not TG_TOKEN or not TG_CHAT_ID:
        return

    url = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"
    payload = {
        "chat_id": TG_CHAT_ID,
        "text": text,
        "parse_mode": "HTML"
    }

    try:
        async with aiohttp.ClientSession() as session:
            await session.post(url, json=payload)
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: {e}")

async def send_hourly_report():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Telegram-—Ä–µ–ø–æ—Ä—Ç –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫–∏.
    """
    if not TG_TOKEN or not TG_CHAT_ID:
        return

    msg = (
        "üïí <b>Hourly DrainBot Report</b>\n"
        f"üîç Checked contracts: <b>{stats['checked']}</b>\n"
        f"‚ö†Ô∏è Vulnerable found: <b>{stats['vulnerable']}</b>\n"
        f"üöÄ Attacks launched: <b>{stats['attacked']}</b>"
    )

    await send_telegram_message(msg)

    # –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    for key in stats:
        stats[key] = 0

