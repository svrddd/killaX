import sys
import os
import asyncio
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

load_dotenv()

from config.settings import TELEGRAM_HOURLY_REPORT_ENABLED
from utils.logger import log_info, send_hourly_report
from core.watcher import run_all_watchers  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

async def hourly_scheduler():
    while True:
        await asyncio.sleep(3600)  # 1 —á–∞—Å
        if TELEGRAM_HOURLY_REPORT_ENABLED:
            await send_hourly_report()

async def start_bot():
    log_info("üöÄ DrainBot started")

    while True:
        try:
            await asyncio.gather(
                run_all_watchers(),
                hourly_scheduler()
            )
        except Exception as e:
            log_info(f"[MAIN] ‚ö†Ô∏è –ë–æ—Ç —É–ø–∞–ª: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(5)

if __name__ == "__main__":
    try:
        asyncio.run(start_bot())
    except KeyboardInterrupt:
        log_info("üõë DrainBot stopped manually.")

